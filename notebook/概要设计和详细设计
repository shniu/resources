
# 概要设计

  > 概要设计就是设计软件的结构，包括：
  >
  > - 基本的系统架构（静态架构+动态架构），数据基本流向图
  > - 系统模块的划分，软件层次结构
  > - 模块间调用关系，模块整体功能
  > - 系统的整体数据结构，和数据库结构，存储什么数据，什么样的结构，数据之间的关系
  > - 输出软件结构图
  > - 指出关键技术难点
  > - 技术路线，大致整体说明软件的实现思路
  > - 概要设计文档最重要的部分是分层数据流图、结构图、数据字典以及相应的文字说明


    在这个阶段，设计者会大致考虑并照顾模块的内部实现，但不过多纠缠于此。主要集中于划分模块、分配任务、定义调用关系。
    模块间的接口与传参在这个阶段要定得十分细致明确，应编写严谨的数据字典，避免后续设计产生不解或误解。概要设计一般
    不是一次就能做到位，而是反复地进行结构调整。典型的调整是合并功能重复的模块，或者进一步分解出可以复用的模块。
    在概要设计阶段，应最大限度地提取可以重用的模块，建立合理的结构体系，节省后续环节的工作量。概要设计文档最重要的部
    分是分层数据流图、结构图、数据字典以及相应的文字说明等。以概要设计文档为依据，各个模块的详细设计就可以并行展开了。

    概要设计里面的数据库设计应该重点在描述数据关系上，说明数据的来龙去脉，在这里应该结合我们的一下结果数据，说明这些
    结果数据的源点，我们这样设计的目的和原因。

# 详细设计

  > 为每个模块完成的功能进行具体的描述，要把功能描述转变为精确的、结构化的过程描述
  > 依据概要设计阶段的分解，设计每个模块内的算法、流程等
  >
  > - 输出为流程图、N-S图、PAD图、伪代码
  > - 

    在这个阶段，各个模块可以分给不同的人去并行设计。在详细设计阶段，设计者的工作对象是一个模块，根据概要设计赋予的局部
    任务和对外接口，设计并表达出模块的算法、流程、状态转换等内容。这里要注意，如果发现有结构调整（如分解出子模块等）的
    必要，必须返回到概要设计阶段，将调整反应到概要设计文档中，而不能就地解决，不打招呼。详细设计文档最重要的部分是模块
    的流程图、状态图、局部变量及相应的文字说明等。一个模块一篇详细设计文档。
